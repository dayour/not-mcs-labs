# .github/workflows/convert-to-pdf.yml

name: Labs to HTML and PDF
# This workflow is triggered on pushes to the repository or manually.
on:
  push:
    branches:
      - main
    # Paths can be used to only trigger actions when you have edited certain files, such as a file within the /labs directory
    paths:
      - "labs/*/*.md"
      - "labs/*/images/**"
      - ".github/styles/**"
  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          echo "Installing Pandoc and wkhtmltopdf..."
          sudo apt-get update -qq

          # Install pandoc first (usually quick)
          sudo apt-get install -y --no-install-recommends pandoc
          echo "✓ Pandoc installed"

          # Try installing wkhtmltopdf with fallback
          if ! sudo apt-get install -y --no-install-recommends wkhtmltopdf; then
            echo "APT installation failed, trying snap..."
            sudo snap install wkhtmltopdf
          fi
          echo "✓ wkhtmltopdf installed"

          # Verify installations
          pandoc --version
          wkhtmltopdf --version
        timeout-minutes: 10

      # Convert labs to HTML first (needed for PDF generation)
      - name: Convert labs to HTML
        run: |
          # Convert each README.md to HTML in its own directory
          for lab_dir in labs/*/; do
            if [ -d "$lab_dir" ] && [ -f "${lab_dir}README.md" ]; then
              lab_name=$(basename "$lab_dir")
              echo "Converting $lab_name to HTML..."
              
              # Change to the lab directory to ensure relative image paths work
              cd "$lab_dir"
              
              # Convert to HTML with custom CSS
              if pandoc "README.md" \
                -o "${lab_name}.html" \
                --standalone \
                --self-contained \
                --css="../../.github/styles/html.css" \
                --html-q-tags \
                --ascii \
                -f markdown+auto_identifiers \
                -t html5 2>/dev/null; then
                echo "✓ Successfully converted $lab_name to HTML"
              else
                # Try fallback conversion without CSS
                echo "Trying fallback HTML method for $lab_name..."
                pandoc "README.md" -o "${lab_name}.html" \
                  --standalone \
                  -f markdown+auto_identifiers \
                  -t html5 2>/dev/null && echo "✓ Fallback HTML conversion succeeded for $lab_name"
              fi
              
              # Change back to root directory
              cd - > /dev/null
            fi
          done

          echo "Generated HTML count: $(find labs -name "*.html" -type f | wc -l)"

      # Convert HTML to PDF (preserves hyperlinks better)
      - name: Convert HTML to PDF
        run: |
          # Convert each HTML file to PDF in its own directory
          for lab_dir in labs/*/; do
            if [ -d "$lab_dir" ]; then
              lab_name=$(basename "$lab_dir")
              html_file="${lab_dir}${lab_name}.html"
              
              if [ -f "$html_file" ]; then
                echo "Converting $lab_name HTML to PDF..."
                
                # Change to the lab directory
                cd "$lab_dir"
                
                # Convert HTML to PDF using wkhtmltopdf (preserves hyperlinks)
                if wkhtmltopdf \
                  --page-size Letter \
                  --margin-top 0.75in \
                  --margin-bottom 0.75in \
                  --margin-left 0.75in \
                  --margin-right 0.75in \
                  --enable-local-file-access \
                  --enable-internal-links \
                  --print-media-type \
                  --no-stop-slow-scripts \
                  --javascript-delay 1000 \
                  "${lab_name}.html" "${lab_name}.pdf" 2>/dev/null; then
                  echo "✓ Successfully converted $lab_name HTML to PDF"
                else
                  echo "✗ Failed to convert $lab_name HTML to PDF"
                fi
                
                # Change back to root directory
                cd - > /dev/null
              else
                echo "✗ HTML file not found for $lab_name"
              fi
            fi
          done

          echo "Generated PDF count: $(find labs -name "*.pdf" -type f | wc -l)"

      # Commit PDFs and HTML files back to the repository
      - name: Commit PDFs and HTML files to repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          echo "Current git status:"
          git status

          echo ""
          echo "Checking for generated files to add:"
          echo "PDF files:"
          find labs -name "*.pdf" -type f
          echo "HTML files:"
          find labs -name "*.html" -type f

          # Add all generated files
          git add labs/

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No generated files to commit"
          else
            echo "Committing generated PDF and HTML files..."
            git commit -m "Auto-generated PDFs and HTML files for lab documentation [skip ci]"
            echo "Pushing changes..."
            git push
          fi
