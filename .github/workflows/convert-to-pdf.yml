# .github/workflows/convert-to-pdf.yml

name: Labs to PDF
# This workflow is triggered on pushes to the repository or manually.
on:
  push:
    branches:
      - main
    # Paths can be used to only trigger actions when you have edited certain files, such as a file within the /labs directory
    paths:
      - "labs/*/*.md"
      - "labs/*/images/**"
      - ".github/styles/**"
  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc wkhtmltopdf

      # Convert labs to PDF
      - name: Convert labs to PDF
        run: |
          # Convert each README.md to PDF in its own directory
          for lab_dir in labs/*/; do
            if [ -d "$lab_dir" ] && [ -f "${lab_dir}README.md" ]; then
              lab_name=$(basename "$lab_dir")
              echo "Converting $lab_name to PDF..."
              
              # Change to the lab directory to ensure relative image paths work
              cd "$lab_dir"
              
              # Use custom CSS for better PDF styling
              if pandoc "README.md" \
                -o "${lab_name}.pdf" \
                --pdf-engine=wkhtmltopdf \
                --css="../../.github/styles/pdf.css" \
                --standalone \
                --self-contained \
                --metadata title="$lab_name Lab Guide" \
                --metadata author="Microsoft Copilot Studio Labs" \
                --metadata date="$(date +%Y-%m-%d)" \
                -V margin-top=0.75in \
                -V margin-bottom=0.75in \
                -V margin-left=0.75in \
                -V margin-right=0.75in \
                --pdf-engine-opt=--enable-local-file-access \
                --pdf-engine-opt=--load-error-handling=ignore \
                --pdf-engine-opt=--load-media-error-handling=ignore 2>/dev/null; then
                echo "✓ Successfully converted $lab_name"
              else
                # Try fallback conversion without CSS
                echo "Trying fallback method for $lab_name..."
                pandoc "README.md" -o "${lab_name}.pdf" --pdf-engine=wkhtmltopdf 2>/dev/null && echo "✓ Fallback conversion succeeded for $lab_name"
              fi
              
              # Change back to root directory
              cd - > /dev/null
            fi
          done

          echo "Generated PDF count: $(find labs -name "*.pdf" -type f | wc -l)"

      # Convert labs to HTML
      - name: Convert labs to HTML
        run: |
          # Convert each README.md to HTML in its own directory
          for lab_dir in labs/*/; do
            if [ -d "$lab_dir" ] && [ -f "${lab_dir}README.md" ]; then
              lab_name=$(basename "$lab_dir")
              echo "Converting $lab_name to HTML..."
              
              # Change to the lab directory to ensure relative image paths work
              cd "$lab_dir"
              
              # Convert to HTML with custom CSS
              if pandoc "README.md" \
                -o "${lab_name}.html" \
                --standalone \
                --self-contained \
                --css="../../.github/styles/html.css" \
                --metadata title="$lab_name Lab Guide" \
                --metadata author="Microsoft Copilot Studio Labs" \
                --metadata date="$(date +%Y-%m-%d)" \
                --toc \
                --toc-depth=3 2>/dev/null; then
                echo "✓ Successfully converted $lab_name to HTML"
              else
                # Try fallback conversion without CSS
                echo "Trying fallback HTML method for $lab_name..."
                pandoc "README.md" -o "${lab_name}.html" --standalone 2>/dev/null && echo "✓ Fallback HTML conversion succeeded for $lab_name"
              fi
              
              # Change back to root directory
              cd - > /dev/null
            fi
          done

          echo "Generated HTML count: $(find labs -name "*.html" -type f | wc -l)"

      # Commit PDFs and HTML files back to the repository
      - name: Commit PDFs and HTML files to repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          echo "Current git status:"
          git status

          echo ""
          echo "Checking for generated files to add:"
          echo "PDF files:"
          find labs -name "*.pdf" -type f
          echo "HTML files:"
          find labs -name "*.html" -type f

          # Add all generated files
          git add labs/

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No generated files to commit"
          else
            echo "Committing generated PDF and HTML files..."
            git commit -m "Auto-generated PDFs and HTML files for lab documentation [skip ci]"
            echo "Pushing changes..."
            git push
          fi
