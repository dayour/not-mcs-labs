# Deploy HTML files to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - "labs/**/*.html"
      - ".github/styles/**"
      - ".github/workflows/deploy-pages.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Enable Pages if not already enabled
          enablement: true
      
      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Create Pages site structure
        run: |
          # Create the site directory
          mkdir -p _site
          
          # Copy CSS files
          mkdir -p _site/styles
          cp -r .github/styles/* _site/styles/
          
          # Convert root README.md to HTML as the main page
          echo "Converting root README.md to homepage..."
          
          # Enhance README for web display
          cp README.md _site/README_processed.md
          
          # Update the table header to replace URL with Download column
          sed -i 's/| Title | URL | Overview |/| Title | Download | Overview |/g' _site/README_processed.md
          sed -i 's/|-------|-----|----------|/|-------|----------|----------|/g' _site/README_processed.md
          
          # Make the title clickable (links to HTML) and put PDF download in Download column
          # Process each lab row - pattern: | Title | [link-text](./labs/lab-name) | Overview |
          # Replace with: | [Title](labs/lab-name/lab-name.html) | [ðŸ“‹ PDF](labs/lab-name/lab-name.pdf) | Overview |
          sed -i -E 's/\| ([^|]+) \| \[([^]]+)\]\(\.\/labs\/([^/]+)\) \| ([^|]+) \|/| [\1](labs\/\3\/\3.html) | [ðŸ“‹ PDF](labs\/\3\/\3.pdf) | \4 |/g' _site/README_processed.md
          
          # Convert README to HTML with custom styling (using embedded resources to fix CSS path issue)
          pandoc _site/README_processed.md \
            -o _site/index.html \
            --standalone \
            --embed-resources \
            --css="styles/html.css" \
            --html-q-tags \
            --section-divs \
            --metadata title="Microsoft Copilot Studio Labs" \
            -f markdown+auto_identifiers+gfm_auto_identifiers+emoji \
            -t html5
          
          # Fix colgroup widths in the generated HTML
          sed -i 's|<colgroup>.*</colgroup>|<colgroup><col style="width: 25%"><col style="width: 10%"><col style="width: 65%"></colgroup>|g' _site/index.html
          
          # Add favicon to homepage (using lab flask emoji)
          sed -i 's|</head>|  <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='"'"'http://www.w3.org/2000/svg'"'"' viewBox='"'"'0 0 100 100'"'"'%3E%3Ctext y='"'"'.9em'"'"' font-size='"'"'90'"'"'%3Eï¿½%3C/text%3E%3C/svg%3E">\n</head>|' _site/index.html
          
          # Copy all HTML files to the site
          for lab_dir in labs/*/; do
            if [ -d "$lab_dir" ]; then
              lab_name=$(basename "$lab_dir")
              html_file="${lab_dir}${lab_name}.html"
              pdf_file="${lab_dir}${lab_name}.pdf"
              
              if [ -f "$html_file" ]; then
                # Copy HTML file to site
                mkdir -p "_site/labs/$lab_name"
                cp "$html_file" "_site/labs/$lab_name/"
                
                # Copy PDF file if it exists
                if [ -f "$pdf_file" ]; then
                  cp "$pdf_file" "_site/labs/$lab_name/"
                fi
                
                # Copy images if they exist
                if [ -d "${lab_dir}images" ]; then
                  cp -r "${lab_dir}images" "_site/labs/$lab_name/"
                fi
                
                echo "âœ“ Copied lab: $lab_name"
              fi
            fi
          done
          
          # Clean up temp file
          rm -f _site/README_processed.md
          
          echo ""
          echo "ðŸ“Š Site structure created:"
          find _site -type f | head -20
          echo "..."
          echo "Total files: $(find _site -type f | wc -l)"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4