# Deploy HTML files to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - "labs/**/*.html"
      - ".github/styles/**"
      - ".github/workflows/deploy-pages.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Enable Pages if not already enabled
          enablement: true

      - name: Create Pages site structure
        run: |
          # Create the site directory
          mkdir -p _site
          
          # Copy CSS files
          mkdir -p _site/styles
          cp -r .github/styles/* _site/styles/
          
          # Create index.html with lab listing
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Microsoft Copilot Studio Labs</title>
              <link rel="stylesheet" href="styles/html.css">
              <style>
                  .lab-grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                      gap: 2rem;
                      margin: 2rem 0;
                  }
                  .lab-card {
                      background: #f8f9fa;
                      border: 1px solid #dee2e6;
                      border-radius: 8px;
                      padding: 1.5rem;
                      transition: transform 0.2s ease, box-shadow 0.2s ease;
                  }
                  .lab-card:hover {
                      transform: translateY(-2px);
                      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                  }
                  .lab-title {
                      color: #2c3e50;
                      margin-bottom: 0.5rem;
                      font-size: 1.2em;
                  }
                  .lab-description {
                      color: #666;
                      margin-bottom: 1rem;
                      line-height: 1.5;
                  }
                  .lab-links {
                      display: flex;
                      gap: 1rem;
                  }
                  .lab-link {
                      padding: 0.5rem 1rem;
                      background: #3498db;
                      color: white;
                      text-decoration: none;
                      border-radius: 4px;
                      font-size: 0.9em;
                      transition: background 0.2s ease;
                  }
                  .lab-link:hover {
                      background: #2980b9;
                      color: white;
                  }
                  .lab-link.pdf {
                      background: #e74c3c;
                  }
                  .lab-link.pdf:hover {
                      background: #c0392b;
                  }
              </style>
          </head>
          <body>
              <h1>ðŸš€ Microsoft Copilot Studio Labs</h1>
              <p>Welcome to the Microsoft Copilot Studio Labs collection. Click on any lab below to view the HTML version or download the PDF.</p>
              
              <div class="lab-grid" id="lab-grid">
                  <!-- Labs will be populated by JavaScript -->
              </div>

              <script>
                  // Lab configuration - this will be populated by the build script
                  const labs = [
          EOF
          
          # Generate lab entries for JavaScript
          echo "          ];" >> _site/index.html
          
          # Add JavaScript to populate the grid
          cat >> _site/index.html << 'EOF'
                  
                  function populateLabGrid() {
                      const grid = document.getElementById('lab-grid');
                      labs.forEach(lab => {
                          const card = document.createElement('div');
                          card.className = 'lab-card';
                          card.innerHTML = `
                              <h3 class="lab-title">${lab.title}</h3>
                              <p class="lab-description">${lab.description}</p>
                              <div class="lab-links">
                                  <a href="${lab.htmlPath}" class="lab-link">ðŸ“„ View HTML</a>
                                  <a href="${lab.pdfPath}" class="lab-link pdf">ðŸ“‹ Download PDF</a>
                              </div>
                          `;
                          grid.appendChild(card);
                      });
                  }
                  
                  // Populate the grid when page loads
                  populateLabGrid();
              </script>
          </body>
          </html>
          EOF
          
          # Copy all HTML files and create lab entries
          echo "          // Lab entries" > temp_labs.js
          for lab_dir in labs/*/; do
            if [ -d "$lab_dir" ]; then
              lab_name=$(basename "$lab_dir")
              html_file="${lab_dir}${lab_name}.html"
              pdf_file="${lab_dir}${lab_name}.pdf"
              
              if [ -f "$html_file" ]; then
                # Copy HTML file to site
                mkdir -p "_site/labs/$lab_name"
                cp "$html_file" "_site/labs/$lab_name/"
                
                # Copy PDF file if it exists
                if [ -f "$pdf_file" ]; then
                  cp "$pdf_file" "_site/labs/$lab_name/"
                fi
                
                # Copy images if they exist
                if [ -d "${lab_dir}images" ]; then
                  cp -r "${lab_dir}images" "_site/labs/$lab_name/"
                fi
                
                # Extract title from HTML file or use lab name
                title=$(grep -o '<title>[^<]*</title>' "$html_file" | sed 's/<title>\(.*\)<\/title>/\1/' || echo "$lab_name")
                title=${title:-$lab_name}
                
                # Generate description from README if available
                description="Hands-on lab for Microsoft Copilot Studio"
                if [ -f "${lab_dir}README.md" ]; then
                  description=$(head -3 "${lab_dir}README.md" | tail -1 | sed 's/^[#* ]*//' | cut -c1-100)
                fi
                
                # Add to JavaScript array
                echo "                      {" >> temp_labs.js
                echo "                          title: '${title//\'/\\\'}', " >> temp_labs.js
                echo "                          description: '${description//\'/\\\'}', " >> temp_labs.js
                echo "                          htmlPath: 'labs/$lab_name/${lab_name}.html', " >> temp_labs.js
                echo "                          pdfPath: 'labs/$lab_name/${lab_name}.pdf'" >> temp_labs.js
                echo "                      }," >> temp_labs.js
                
                echo "âœ“ Added lab: $lab_name"
              fi
            fi
          done
          
          # Insert lab data into index.html
          sed -i '/\/\/ Lab entries/r temp_labs.js' _site/index.html
          rm temp_labs.js
          
          echo ""
          echo "ðŸ“Š Site structure created:"
          find _site -type f | head -20
          echo "..."
          echo "Total files: $(find _site -type f | wc -l)"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4