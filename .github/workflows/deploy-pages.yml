name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Copy lab images to docs
      run: |
        # Create images directory structure
        mkdir -p docs/images/labs
        
        # Copy all lab images to docs/images/labs preserving structure
        find labs -name "images" -type d | while read -r dir; do
          lab_name=$(echo "$dir" | cut -d'/' -f2)
          mkdir -p "docs/images/labs/$lab_name"
          cp -r "$dir"/* "docs/images/labs/$lab_name/" 2>/dev/null || true
        done
        
        # Copy lab README files for content processing
        find labs -name "README.md" | while read -r file; do
          lab_name=$(dirname "$file" | cut -d'/' -f2)
          mkdir -p "docs/content/$lab_name"
          cp "$file" "docs/content/$lab_name/"
        done
        
    - name: Process lab content
      run: |
        # Create a simple JSON index of labs for the frontend
        node -e "
        const fs = require('fs');
        const path = require('path');
        
        // Read main README
        const readme = fs.readFileSync('README.md', 'utf8');
        
        // Extract labs table
        const tableRegex = /\|\s*(.+?)\s*\|\s*\[(.+?)\]\((.+?)\)\s*\|\s*(.+?)\s*\|/g;
        const labs = [];
        let match;
        
        while ((match = tableRegex.exec(readme)) !== null) {
          const [, title, linkText, url, description] = match;
          if (title.includes('Title') || title.includes('---')) continue;
          
          const labId = url.replace('./labs/', '').replace('/', '');
          labs.push({
            id: labId,
            title: title.trim(),
            url: url.trim(),
            description: description.trim()
          });
        }
        
        // Write labs index
        fs.writeFileSync('docs/data/labs.json', JSON.stringify(labs, null, 2));
        console.log('Generated labs index with', labs.length, 'labs');
        "
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
        
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4